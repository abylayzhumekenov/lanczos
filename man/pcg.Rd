% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cg.precond.R
\name{pcg}
\alias{pcg}
\title{Preconditioned Conjugate Gradient algorithm}
\usage{
pcg(
  A,
  b,
  x = rnorm(length(b)),
  m = length(b),
  tol = 1e-07,
  diag.comp = "aj",
  alpha = 1,
  L
)
}
\arguments{
\item{A}{A symmetric positive definite matrix for the system Ax = b. No default value.}

\item{b}{A right hand side vector in Ax = b. No default value.}

\item{x}{An initial guess which is produces the first residual r. Default is a random vector.}

\item{m}{Maximum number of iterations to be run. Default is length(b).}

\item{tol}{The relative tolerance for residual norms. Default is 1e-7.}

\item{diag.comp}{A type of diagonal compensation for IC(0) preconditioning. Default is "aj".}

\item{alpha}{The scale of diagonal compensation. Default is 1.}

\item{L}{The preconditioner to supply. If missing, the IC(0) is above parameters is computed.}
}
\description{
The function solve a symmetric positive definite system by left preconditioning the system Ax = b.
The Preconditoined CG algorithm is implemented using the (preconditioner) M inner product.
}
\examples{
A = matrix(rnorm(100^2), 100)
A = t(A)\%*\%A
b = rnorm(100)
res = pcg(A, b)
plot(solve(A, b), t="l")
lines(res$x, col="red")
}
\keyword{Conjugate}
\keyword{Gradient,}
\keyword{Krylov}
\keyword{Lanczos,}
